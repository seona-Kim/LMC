/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-10-23 11:30:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _404_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);
    if (exception != null) {
      response.setStatus(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 response.setStatus(200); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<title>404</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body{margin-top:20px;}\r\n");
      out.write("	.error-page {\r\n");
      out.write("	    text-align: center;\r\n");
      out.write("		background: #fff;\r\n");
      out.write("		border-top: 1px solid #eee;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .error-inner {\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .error-inner h1 {\r\n");
      out.write("		font-size: 140px;\r\n");
      out.write("		text-shadow: 3px 5px 2px #3333;\r\n");
      out.write("		color: #006DFE;\r\n");
      out.write("		font-weight: 700;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .error-inner h1 span {\r\n");
      out.write("		display: block;\r\n");
      out.write("		font-size: 25px;\r\n");
      out.write("		color: #333;\r\n");
      out.write("		font-weight: 600;\r\n");
      out.write("		text-shadow: none;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .error-inner p {\r\n");
      out.write("		padding: 20px 15px;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		position: relative;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form input {\r\n");
      out.write("		width: 400px;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		padding: 0px 78px 0 30px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		background: #f6f6f6;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write("		font-weight:400;\r\n");
      out.write("		font-size:14px;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form input:hover{\r\n");
      out.write("		padding-left:35px;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form .btn {\r\n");
      out.write("		width: 80px;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		background: #006DFE;\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		position: relative;\r\n");
      out.write("		top: -2px;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form .btn i{\r\n");
      out.write("		font-size:16px;\r\n");
      out.write("	}\r\n");
      out.write("	.error-page .search-form .btn:hover{\r\n");
      out.write("		background:#333;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("	<section class=\"error-page section\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-lg-6 offset-lg-3 col-12\">\r\n");
      out.write("					<!-- Error Inner -->\r\n");
      out.write("					<div class=\"error-inner\">\r\n");
      out.write("						<h1>404<span>업데이트 될 예정인 페이지입니다!</span></h1>\r\n");
      out.write("						<p>찾으시는 글이 있다면 밑에서 검색을 해보시는건 어떠신가요? <br> 아니면 <a href=\"");
      out.print( request.getContextPath() );
      out.write("\">메인페이지</a>로 갈수도 있습니다!</p>\r\n");
      out.write("						<form class=\"search-form\" action=\"");
      out.print( request.getContextPath() );
      out.write("/searchListView.bo?currentPage=1;\" method=\"get\">\r\n");
      out.write("							<input placeholder=\"검색어를 입력하세요.\" type=\"text\" name=\"keyword\">\r\n");
      out.write("							<button class=\"btn\" type=\"submit\" name=\"currentPage\" value=\"1\"><i class=\"fa fa-search\"></i></button>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!--/ End Error Inner -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
